services:
  # FastAPI Backend to receive data from the ESP32
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      # These variables are used by the FastAPI app to connect to InfluxDB
      - INFLUXDB_HOST=http://influxdb:8086
      - INFLUXDB_TOKEN=your_influxdb_token
      - INFLUXDB_ORG=your_organization_name
      - INFLUXDB_BUCKET=temperature_metrics
    # The backend depends on the database to start
    depends_on:
      - influxdb

  # InfluxDB time-series database
  influxdb:
    image: influxdb:2.0
    ports:
      - "8086:8086"
    volumes:
      # This volume persists the database data
      - influxdb_data:/var/lib/influxdb2
    environment:
      # Initial setup for InfluxDB (admin user, org, bucket, and token)
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin
      - DOCKER_INFLUXDB_INIT_ORG=your_organization_name
      - DOCKER_INFLUXDB_INIT_BUCKET=temperature_metrics
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=your_influxdb_token
    restart: always

    # Grafana visualization dashboard
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3003:3000"
    volumes:
      # This volume persists Grafana dashboards
      - grafana_data:/var/lib/grafana
      # This provisions the InfluxDB data source automatically
      - ./grafana_config/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
      - ./grafana_config/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - influxdb
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    restart: always

  # Fake temperature sensor for testing
  fake_sensor:
    build: ./fake_sensor
    # volumes:
    #   - ./fake_sensor:/app
    environment:
      - BACKEND_URL=http://backend:8000/metrics/temperature
      - SEND_INTERVAL=5
    depends_on:
      - backend
      - influxdb
    restart: unless-stopped

# Define the volumes to persist data
volumes:
  influxdb_data:
  grafana_data:
